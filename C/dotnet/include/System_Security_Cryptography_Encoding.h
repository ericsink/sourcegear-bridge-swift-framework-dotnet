// this file is automatically generated
// Copyright 2021 SourceGear

#include <stdint.h>

#ifndef INCLUDE_System_Security_Cryptography_Encoding
#define INCLUDE_System_Security_Cryptography_Encoding

#ifdef __cplusplus
extern "C" {
#endif

typedef const void* _Nonnull SG_HNDL_NONNULL;
typedef const void* _Nullable SG_HNDL_NULLABLE;
typedef const void* _Nonnull TYP;
typedef uint64_t GVAL;

TYP System_Security_Cryptography_AsnEncodedData_get_type_handle(void);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_ctor_0__1__u8Array(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL rawData);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_ctor_0__1__rospanu8(SG_HNDL_NULLABLE * _Nonnull __thrown, const void* _Nonnull __rawData_spanptr);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_ctor_0__1__AsnEncodedData(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL asnEncodedData);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_ctor_0__2__Oid_u8Array(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NULLABLE oid, SG_HNDL_NONNULL rawData);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_ctor_0__2__Oid_rospanu8(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NULLABLE oid, const void* _Nonnull __rawData_spanptr);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_ctor_0__2__String_u8Array(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL oid, SG_HNDL_NONNULL rawData);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_ctor_0__2__String_rospanu8(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL oid, const void* _Nonnull __rawData_spanptr);

void System_Security_Cryptography_AsnEncodedData_void__CopyFrom_0__1__AsnEncodedData(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL asnEncodedData);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_String__Format_0__1__bool(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, int32_t multiLine);

SG_HNDL_NULLABLE System_Security_Cryptography_AsnEncodedData_Oid__get_Oid_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_AsnEncodedData_void__set_Oid_0__1__Oid(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NULLABLE value);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_u8Array__get_RawData_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_AsnEncodedData_void__set_RawData_0__1__u8Array(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL value);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedData_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

TYP System_Security_Cryptography_AsnEncodedDataCollection_get_type_handle(void);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedDataCollection_ctor_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedDataCollection_ctor_0__1__AsnEncodedData(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL asnEncodedData);

int32_t System_Security_Cryptography_AsnEncodedDataCollection_i32__Add_0__1__AsnEncodedData(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL asnEncodedData);

void System_Security_Cryptography_AsnEncodedDataCollection_void__CopyTo_0__2__AsnEncodedDataArray_i32(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL array, int32_t index);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedDataCollection_AsnEncodedDataEnumerator__GetEnumerator_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_AsnEncodedDataCollection_void__Remove_0__1__AsnEncodedData(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL asnEncodedData);

int32_t System_Security_Cryptography_AsnEncodedDataCollection_i32__get_Count_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_AsnEncodedDataCollection_bool__get_IsSynchronized_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedDataCollection_Object__get_SyncRoot_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedDataCollection_AsnEncodedData__get_Item_0__1__i32(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, int32_t index);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedDataCollection_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

TYP System_Security_Cryptography_AsnEncodedDataEnumerator_get_type_handle(void);

int32_t System_Security_Cryptography_AsnEncodedDataEnumerator_bool__MoveNext_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_AsnEncodedDataEnumerator_void__Reset_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedDataEnumerator_AsnEncodedData__get_Current_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_AsnEncodedDataEnumerator_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

TYP System_Security_Cryptography_FromBase64Transform_get_type_handle(void);

SG_HNDL_NONNULL System_Security_Cryptography_FromBase64Transform_ctor_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown);

SG_HNDL_NONNULL System_Security_Cryptography_FromBase64Transform_ctor_0__1__FromBase64TransformMode(SG_HNDL_NULLABLE * _Nonnull __thrown, int32_t whitespaces);

void System_Security_Cryptography_FromBase64Transform_void__Clear_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_FromBase64Transform_void__Dispose_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_FromBase64Transform_i32__TransformBlock_0__5__u8Array_i32_i32_u8Array_i32(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL inputBuffer, int32_t inputOffset, int32_t inputCount, SG_HNDL_NONNULL outputBuffer, int32_t outputOffset);

SG_HNDL_NONNULL System_Security_Cryptography_FromBase64Transform_u8Array__TransformFinalBlock_0__3__u8Array_i32_i32(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL inputBuffer, int32_t inputOffset, int32_t inputCount);

int32_t System_Security_Cryptography_FromBase64Transform_bool__get_CanReuseTransform_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_FromBase64Transform_bool__get_CanTransformMultipleBlocks_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_FromBase64Transform_i32__get_InputBlockSize_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_FromBase64Transform_i32__get_OutputBlockSize_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_FromBase64Transform_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

TYP System_Security_Cryptography_FromBase64TransformMode_get_type_handle(void);

int32_t System_Security_Cryptography_FromBase64TransformMode_get_IgnoreWhiteSpaces(void);

int32_t System_Security_Cryptography_FromBase64TransformMode_get_DoNotIgnoreWhiteSpaces(void);

TYP System_Security_Cryptography_Oid_get_type_handle(void);

SG_HNDL_NONNULL System_Security_Cryptography_Oid_ctor_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown);

SG_HNDL_NONNULL System_Security_Cryptography_Oid_ctor_0__1__Oid(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL oid);

SG_HNDL_NONNULL System_Security_Cryptography_Oid_ctor_0__1__String(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL oid);

SG_HNDL_NONNULL System_Security_Cryptography_Oid_ctor_0__2__String_String(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NULLABLE value, SG_HNDL_NULLABLE friendlyName);

SG_HNDL_NONNULL System_Security_Cryptography_Oid_Oid__FromFriendlyName_0__2__String_OidGroup(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL friendlyName, int32_t group);

SG_HNDL_NONNULL System_Security_Cryptography_Oid_Oid__FromOidValue_0__2__String_OidGroup(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL oidValue, int32_t group);

SG_HNDL_NULLABLE System_Security_Cryptography_Oid_String__get_FriendlyName_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_Oid_void__set_FriendlyName_0__1__String(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NULLABLE value);

SG_HNDL_NULLABLE System_Security_Cryptography_Oid_String__get_Value_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_Oid_void__set_Value_0__1__String(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NULLABLE value);

SG_HNDL_NONNULL System_Security_Cryptography_Oid_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

TYP System_Security_Cryptography_OidCollection_get_type_handle(void);

SG_HNDL_NONNULL System_Security_Cryptography_OidCollection_ctor_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown);

int32_t System_Security_Cryptography_OidCollection_i32__Add_0__1__Oid(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL oid);

void System_Security_Cryptography_OidCollection_void__CopyTo_0__2__OidArray_i32(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL array, int32_t index);

SG_HNDL_NONNULL System_Security_Cryptography_OidCollection_OidEnumerator__GetEnumerator_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_OidCollection_i32__get_Count_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_OidCollection_bool__get_IsSynchronized_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_OidCollection_Object__get_SyncRoot_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_OidCollection_Oid__get_Item_0__1__i32(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, int32_t index);

SG_HNDL_NULLABLE System_Security_Cryptography_OidCollection_Oid__get_Item_0__1__String(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL oid);

SG_HNDL_NONNULL System_Security_Cryptography_OidCollection_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

TYP System_Security_Cryptography_OidEnumerator_get_type_handle(void);

int32_t System_Security_Cryptography_OidEnumerator_bool__MoveNext_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_OidEnumerator_void__Reset_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_OidEnumerator_Oid__get_Current_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_OidEnumerator_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

TYP System_Security_Cryptography_OidGroup_get_type_handle(void);

int32_t System_Security_Cryptography_OidGroup_get_All(void);

int32_t System_Security_Cryptography_OidGroup_get_HashAlgorithm(void);

int32_t System_Security_Cryptography_OidGroup_get_EncryptionAlgorithm(void);

int32_t System_Security_Cryptography_OidGroup_get_PublicKeyAlgorithm(void);

int32_t System_Security_Cryptography_OidGroup_get_SignatureAlgorithm(void);

int32_t System_Security_Cryptography_OidGroup_get_Attribute(void);

int32_t System_Security_Cryptography_OidGroup_get_ExtensionOrAttribute(void);

int32_t System_Security_Cryptography_OidGroup_get_EnhancedKeyUsage(void);

int32_t System_Security_Cryptography_OidGroup_get_Policy(void);

int32_t System_Security_Cryptography_OidGroup_get_Template(void);

int32_t System_Security_Cryptography_OidGroup_get_KeyDerivationFunction(void);

SG_HNDL_NONNULL System_Security_Cryptography_PemEncoding_PemFields__Find_0__1__rospanChar(SG_HNDL_NULLABLE * _Nonnull __thrown, const void* _Nonnull __pemData_spanptr);

int32_t System_Security_Cryptography_PemEncoding_i32__GetEncodedSize_0__2__i32_i32(SG_HNDL_NULLABLE * _Nonnull __thrown, int32_t labelLength, int32_t dataLength);

int32_t System_Security_Cryptography_PemEncoding_bool__TryFind_0__2__rospanChar_outPemFields(SG_HNDL_NULLABLE * _Nonnull __thrown, const void* _Nonnull __pemData_spanptr, SG_HNDL_NONNULL* _Nonnull __fields_out_ptr);

int32_t System_Security_Cryptography_PemEncoding_bool__TryWrite_0__4__rospanChar_rospanu8_spanChar_outi32(SG_HNDL_NULLABLE * _Nonnull __thrown, const void* _Nonnull __label_spanptr, const void* _Nonnull __data_spanptr, const void* _Nonnull __destination_spanptr, int32_t* _Nonnull __charsWritten_out_ptr);

SG_HNDL_NONNULL System_Security_Cryptography_PemEncoding_CharArray__Write_0__2__rospanChar_rospanu8(SG_HNDL_NULLABLE * _Nonnull __thrown, const void* _Nonnull __label_spanptr, const void* _Nonnull __data_spanptr);

TYP System_Security_Cryptography_PemFields_get_type_handle(void);

SG_HNDL_NONNULL System_Security_Cryptography_PemFields_Range__get_Base64Data_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_PemFields_i32__get_DecodedDataLength_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_PemFields_Range__get_Label_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_PemFields_Range__get_Location_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_PemFields_implicit_ctor(void);

TYP System_Security_Cryptography_ToBase64Transform_get_type_handle(void);

SG_HNDL_NONNULL System_Security_Cryptography_ToBase64Transform_ctor_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown);

void System_Security_Cryptography_ToBase64Transform_void__Clear_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void System_Security_Cryptography_ToBase64Transform_void__Dispose_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_ToBase64Transform_i32__TransformBlock_0__5__u8Array_i32_i32_u8Array_i32(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL inputBuffer, int32_t inputOffset, int32_t inputCount, SG_HNDL_NONNULL outputBuffer, int32_t outputOffset);

SG_HNDL_NONNULL System_Security_Cryptography_ToBase64Transform_u8Array__TransformFinalBlock_0__3__u8Array_i32_i32(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NONNULL inputBuffer, int32_t inputOffset, int32_t inputCount);

int32_t System_Security_Cryptography_ToBase64Transform_bool__get_CanReuseTransform_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_ToBase64Transform_bool__get_CanTransformMultipleBlocks_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_ToBase64Transform_i32__get_InputBlockSize_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

int32_t System_Security_Cryptography_ToBase64Transform_i32__get_OutputBlockSize_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL System_Security_Cryptography_ToBase64Transform_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);


#ifdef __cplusplus
}
#endif

#endif // INCLUDE_System_Security_Cryptography_Encoding

